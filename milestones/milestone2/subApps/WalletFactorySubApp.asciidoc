= Wallet Factory

== Wallet Factory SubApp

Esta subaplicación debe permitir al usuario crear y editar wallet factory projects. +
Los wallet factory projects (WFP) encapsulan la siguiente información: 

* Recursos: Imágenes y demás archivos multimedia que utiliza la wallet.
* Estructura de navegación: Es un archivo que representa una estrcutura de clases que representa los menues, actividades, fragmentos, tabs, botones, etc. Actualmente se puede ver esto implementado por el plugin WalletRuntime de la capa Module. Esta estructura debería referenciar a los recursos que deben cargarse y a las clases concretas que imṕlementan el código de front-end que ejecuta la wallet.
lgunas de las funcionalidades específicas de este módulo serán: 

Queremos poder importar y exportar los recursos y la estructura de navegación (por separado) desde repositorios github. Esto lo deseamos porque le permitiría al desarrollador poder mover el WFP entre dispositivos o emuladores conf acilidad. +
Además la subApp debería permitir que uno corra la wallet que está editando (si bien uno edita el WFP nos referiremos al WFP y a la wallet como wallet aclarando la distinción cuando el contexto sea ambiguo). +

Por tanto la subApp debería mostrar los proyectos creados, si un proyecto tiene configurada su estructura de navegación debería permitir que uno ponga a correr la wallet. Además debería permitir abrir en modo de edición estos proyectos y editarlos desde la aplicación (agregar/eliminar/desplazar/redimencionar distintas partes de la wallet, agregar/quitar tabs, referenciar el código a llamar cuando al tocar un botós, o entrar a un fragmento, etc.).

Para correr la wallet, esta subApp deberá hacer algo similar a lo que actualmente hacen la WalletActivity y la FragmentActivity, pero en vez de pedir la estructura de navegación al Wallet Runtime se la pediría al plugin Wallwt Factory de la capa Module. Los recursos deberán dejar de estar hardcodeados como están hoy en las mencionadas clases y deberán buscarse los recursos también desde las referencias de la estrcutura de navegación. Dada la referencia, la clase que implemente el entorno de ejecución deberá pedirle también al Wallet Factory los recursos que necesita cargar.

== Wallet Factory plugin - Module Layer

== Wallet Factory plugin - Middleware Layer

Este plugin es quien debe proveerle a la subApp los métodos necesarios para que pueda llevar a cabo las funcionalidades que no dependen de android. +
Podemos listar entre estas:

* Proveer y persister WFP
** Operaciones como Crearm Abrir, Guardar, Guardar Como, Cambiar Nombre, Eliminar, Importar de un repositorio, Guardar en un repositorio github 
* Administrar los recursos: Agregar, Renombrar,

La idea de importar/exportar el proyecto usando github o algún servicio similar consiste en que el desarrollador pueda trabajar con varios dispositivos de forma sencilla. Esto le permite por ejemplo probar su wallet en varios emuladores/dispositivos.
Un desafío en el diseño de este plug-in es diseñar el formato del archivo WFP. Este deberá ser la serialización de las clases de la estructura de navegación junto con los recursos.

